plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
    id ('io.gitlab.arturbosch.detekt').version('1.18.1')
}

detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = false // activate all available (even unstable) rules.
    baseline = file('$projectDir/config/baseline.xml')
    // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true
        // similar to the console output, contains issue signature to manually edit baseline files
        sarif.enabled = true
        // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning
    }
}

def keystorePropertiesFile = rootProject.file('keystore.properties')
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdk 31
    buildToolsVersion '30.0.3'

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    defaultConfig {
        applicationId "com.conboi.plannerapp"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    compileSdkVersion 31
}

dependencies {
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-ads:20.5.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
    // Default dependencies
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.annotation:annotation:1.3.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.google.android.material:material:1.6.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'

    // Fragment
    implementation 'androidx.fragment:fragment-ktx:1.4.0'
    // Navigation Component
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.0-beta02'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.0-beta02'


    // Lifecycle + ViewModel & LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'


    // Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.40.1'
    kapt 'com.google.dagger:hilt-android-compiler:2.40.1'
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-work:1.0.0'


    // Room
    implementation 'androidx.room:room-runtime:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'

    // DataStore
    implementation 'androidx.datastore:datastore-core:1.0.0'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'


    // FirebaseUI for Cloud Firestore
    implementation 'com.firebaseui:firebase-ui-firestore:8.0.0'
    // FirebaseUI for Auth
    implementation 'com.firebaseui:firebase-ui-auth:8.0.0'
    //Firebase Database
    implementation 'com.google.firebase:firebase-database-ktx:20.0.3'
    //Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:28.3.0')
    //Firebase Authentication
    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.1'
    //Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx:20.0.0'
    //Firebase Performance
    implementation 'com.google.firebase:firebase-perf-ktx:20.0.4'
    //Firebase Firestore
    implementation 'com.google.firebase:firebase-firestore-ktx:24.0.0'
    //Firebase Crashlytics
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.2.5'

    
    //Coil
    implementation 'io.coil-kt:coil:1.4.0'


    //Paging3
    implementation 'androidx.paging:paging-runtime-ktx:3.1.0'


    //WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
}